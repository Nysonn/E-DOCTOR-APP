<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Make a Call</title>
  <link rel="stylesheet" href="/make-a-call-patient.css">
</head>
<body>
  <div class="container">
    <h1>Start Consultation</h1>
    <p>Connect with a medical specialist</p>
    
    <div class="select-container">
      <select id="doctorSelect">
        <option value="">Select a Doctor</option>
      </select>
    </div>
    
    <button id="makeCall">Make a Call</button>
    
    <div class="waiting-message" id="waitingMessage">
      Waiting for doctor to accept the call...
    </div>
    
    <div id="video-container">
      <iframe id="jitsi-frame" width="800" height="600" allow="camera; microphone; fullscreen" frameborder="0"></iframe>
    </div>
  </div>

  <script>
    const socket = new WebSocket(`ws://${window.location.host}`);
    const makeCallBtn = document.getElementById('makeCall');
    const waitingMessage = document.getElementById('waitingMessage');
    const doctorSelect = document.getElementById('doctorSelect');
    
    async function loadDoctors() {
      try {
        const response = await fetch('/available-doctors');
        const doctors = await response.json();
        
        doctors.forEach(doctor => {
          const option = document.createElement('option');
          option.value = doctor.id;
          option.textContent = `${doctor.full_name} - ${doctor.specialisation}`;
          doctorSelect.appendChild(option);
        });
      } catch (error) {
        console.error('Error loading doctors:', error);
      }
    }

    loadDoctors();
    
    socket.onopen = () => {
      socket.send(JSON.stringify({
        type: 'register',
        userId: '<%= user ? user.id : "" %>'
      }));
    };
    
    socket.onmessage = (event) => {
      const data = JSON.parse(event.data);
      if (data.type === 'call-accepted') {
        waitingMessage.classList.remove('show');
        const iframeSrc = `https://meet.jit.si/${data.roomName}`;
        const jitsiFrame = document.getElementById("jitsi-frame");
        jitsiFrame.src = iframeSrc;
        document.getElementById("video-container").classList.add('show');
      }
    };

    makeCallBtn.addEventListener("click", async () => {
      const selectedDoctorId = doctorSelect.value;
      
      if (!selectedDoctorId) {
        alert('Please select a doctor first');
        return;
      }

      makeCallBtn.disabled = true;
      doctorSelect.disabled = true;
      waitingMessage.classList.add('show');

      socket.send(JSON.stringify({
        type: 'start-call',
        patientId: '<%= user ? user.id : "" %>',
        doctorId: selectedDoctorId,
        fullName: '<%= user ? user.full_name : "" %>'
      }));
    });
  </script>
</body>
</html>
